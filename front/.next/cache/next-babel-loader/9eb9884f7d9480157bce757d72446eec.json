{"ast":null,"code":"var _jsxFileName = \"/Users/mariesco/Documents/Practicas/typescript/simple crud/front/pages/index.tsx\";\nvar __jsx = React.createElement;\n//Lo mínimo para arrancar:\n//npm i next react react-dom\n//npm i -D @types/next @types/react @types/react-dom @zeit/next-typescript typescript\n//creamos nuestros script en package.json\n//creamos babel.config.js\n//creamos next.config.js\n//creamos tsconfig.json\nimport React, { useState, useRef, useEffect } from \"react\";\nimport Container from \"../components/container\";\n\nconst Index = ({\n  tareas\n}) => {\n  const {\n    0: newTask,\n    1: setNewTask\n  } = useState(\"\");\n  const {\n    0: tasks,\n    1: setTasks\n  } = useState([]);\n  const inputRef = useRef(null);\n  useEffect(() => {\n    let tarAsign = [];\n    tareas.map(tarea => {\n      tarAsign.push({\n        name: tarea.task,\n        done: tarea.done\n      });\n      console.log(tarea);\n    });\n    setTasks(tarAsign);\n  }, []);\n\n  const handleSubmit = e => {\n    var _inputRef$current;\n\n    e.preventDefault();\n    addTask(newTask);\n    setNewTask(\"\");\n    (_inputRef$current = inputRef.current) === null || _inputRef$current === void 0 ? void 0 : _inputRef$current.focus();\n  };\n\n  const addTask = name => {\n    fetch(\"http://localhost:3300/addtask\", {\n      method: \"POST\",\n      body: JSON.stringify({\n        task: name,\n        done: false\n      }),\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    }).then(res => res.json()).catch(error => console.error(\"Error:\", error)).then(response => console.log(\"Success:\", response));\n    const newTasks = [...tasks, {\n      name,\n      done: false\n    }];\n    setTasks(newTasks);\n    console.log(tasks);\n  };\n\n  const removeTask = i => {\n    const copyTask = [...tasks];\n    copyTask.splice(i, 1);\n    fetch(\"http://localhost:3300/byetask\", {\n      method: \"DELETE\",\n      body: JSON.stringify(tasks[i]),\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    }).then(res => res.json()).catch(error => console.error(\"Error:\", error)).then(response => console.log(\"Success:\", response));\n    setTasks(copyTask);\n  };\n\n  return __jsx(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 5\n    }\n  }, __jsx(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }\n  }, __jsx(\"div\", {\n    className: \"col-md-6 offset-md-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 9\n    }\n  }, __jsx(\"div\", {\n    className: \"card\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 11\n    }\n  }, __jsx(\"div\", {\n    className: \"card-body\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 13\n    }\n  }, __jsx(\"form\", {\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 15\n    }\n  }, __jsx(\"input\", {\n    type: \"text\",\n    onChange: e => setNewTask(e.target.value),\n    value: newTask,\n    className: \"form-control\",\n    autoFocus: true,\n    ref: inputRef,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 17\n    }\n  }), __jsx(\"button\", {\n    className: \"btn btn-success btn-block mt-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 17\n    }\n  }, \"Guardar\")))), tasks.map((t, i) => __jsx(\"div\", {\n    className: \"card card-body mt-2\",\n    key: i,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 13\n    }\n  }, __jsx(\"h2\", {\n    style: {\n      textDecoration: t.done ? \"line-through\" : \"\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 15\n    }\n  }, t.name), __jsx(\"p\", {\n    style: {\n      float: \"left\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 15\n    }\n  }, t.done + \"\"), __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 15\n    }\n  }, __jsx(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 17\n    }\n  }), __jsx(\"button\", {\n    className: \"btn btn-danger\",\n    onClick: () => removeTask(i),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 17\n    }\n  }, \"Eliminar\")))))));\n};\n\nexport const getServerSideProps = async () => {\n  const respuesta = await fetch(\"http://localhost:3300/tasks\");\n  const datos = await respuesta.json().then(wasa => {\n    return wasa.task;\n  });\n  return {\n    props: {\n      tareas: datos\n    }\n  };\n};\nexport default Index;","map":{"version":3,"sources":["/Users/mariesco/Documents/Practicas/typescript/simple crud/front/pages/index.tsx"],"names":["React","useState","useRef","useEffect","Container","Index","tareas","newTask","setNewTask","tasks","setTasks","inputRef","tarAsign","map","tarea","push","name","task","done","console","log","handleSubmit","e","preventDefault","addTask","current","focus","fetch","method","body","JSON","stringify","headers","then","res","json","catch","error","response","newTasks","removeTask","i","copyTask","splice","target","value","t","textDecoration","float","getServerSideProps","respuesta","datos","wasa","props"],"mappings":"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","sourcesContent":["//Lo mínimo para arrancar:\n//npm i next react react-dom\n//npm i -D @types/next @types/react @types/react-dom @zeit/next-typescript typescript\n//creamos nuestros script en package.json\n//creamos babel.config.js\n//creamos next.config.js\n//creamos tsconfig.json\nimport React, { useState, useRef, useEffect } from \"react\";\nimport Container from \"../components/container\";\nimport { GetServerSideProps } from \"next\";\n\ntype FormElement = React.FormEvent<HTMLFormElement>;\n\ninterface iTask {\n  name: string;\n  done: boolean;\n}\n\ninterface Itareas {\n  task: string;\n  done: boolean;\n}\n\ninterface TareasProps {\n  tareas: Itareas;\n}\n\nconst Index = ({ tareas }: { tareas: object[] }): JSX.Element => {\n  const [newTask, setNewTask] = useState<string>(\"\");\n  const [tasks, setTasks] = useState<iTask[]>([]);\n\n  const inputRef = useRef<HTMLInputElement>(null);\n\n  useEffect(() => {\n    let tarAsign: iTask[] = [];\n    tareas.map((tarea: any) => {\n      tarAsign.push({\n        name: tarea.task,\n        done: tarea.done,\n      });\n      console.log(tarea);\n    });\n    setTasks(tarAsign);\n  }, []);\n\n  const handleSubmit = (e: FormElement) => {\n    e.preventDefault();\n    addTask(newTask);\n    setNewTask(\"\");\n    inputRef.current?.focus();\n  };\n\n  const addTask = (name: string): void => {\n    fetch(\"http://localhost:3300/addtask\", {\n      method: \"POST\",\n      body: JSON.stringify({\n        task: name,\n        done: false,\n      }),\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n    })\n      .then((res) => res.json())\n      .catch((error) => console.error(\"Error:\", error))\n      .then((response) => console.log(\"Success:\", response));\n    const newTasks: iTask[] = [\n      ...tasks,\n      {\n        name,\n        done: false,\n      },\n    ];\n    setTasks(newTasks);\n    console.log(tasks);\n  };\n\n  const removeTask = (i: number): void => {\n    const copyTask: iTask[] = [...tasks];\n    copyTask.splice(i, 1);\n    fetch(\"http://localhost:3300/byetask\", {\n      method: \"DELETE\",\n      body: JSON.stringify(tasks[i]),\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n    })\n      .then((res) => res.json())\n      .catch((error) => console.error(\"Error:\", error))\n      .then((response) => console.log(\"Success:\", response));\n    setTasks(copyTask);\n  };\n\n  return (\n    <Container>\n      <div className=\"row\">\n        <div className=\"col-md-6 offset-md-3\">\n          <div className=\"card\">\n            <div className=\"card-body\">\n              <form onSubmit={handleSubmit}>\n                <input\n                  type=\"text\"\n                  onChange={(e) => setNewTask(e.target.value)}\n                  value={newTask}\n                  className=\"form-control\"\n                  autoFocus\n                  ref={inputRef}\n                />\n                <button className=\"btn btn-success btn-block mt-2\">\n                  Guardar\n                </button>\n              </form>\n            </div>\n          </div>\n          {tasks.map((t: iTask, i: number) => (\n            <div className=\"card card-body mt-2\" key={i}>\n              <h2 style={{ textDecoration: t.done ? \"line-through\" : \"\" }}>\n                {t.name}\n              </h2>\n              <p style={{ float: \"left\" }}>{t.done + \"\"}</p>\n              <div>\n                <br />\n                <button\n                  className=\"btn btn-danger\"\n                  onClick={() => removeTask(i)}\n                >\n                  Eliminar\n                </button>\n              </div>\n            </div>\n          ))}\n        </div>\n      </div>\n    </Container>\n  );\n};\n\nexport const getServerSideProps: GetServerSideProps<TareasProps> = async () => {\n  const respuesta = await fetch(\"http://localhost:3300/tasks\");\n  const datos = await respuesta.json().then((wasa) => {\n    return wasa.task;\n  });\n\n  return {\n    props: {\n      tareas: datos,\n    },\n  };\n};\n\nexport default Index;\n"]},"metadata":{},"sourceType":"module"}