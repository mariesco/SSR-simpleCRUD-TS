{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/mariesco/Documents/Practicas/typescript/simple crud/front/pages/index.tsx\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\n//Lo mínimo para arrancar:\n//npm i next react react-dom\n//npm i -D @types/next @types/react @types/react-dom @zeit/next-typescript typescript\n//creamos nuestros script en package.json\n//creamos babel.config.js\n//creamos next.config.js\n//creamos tsconfig.json\nimport React, { useState, useRef } from \"react\";\nimport Container from \"../components/container\";\n\nvar Index = function Index() {\n  _s();\n\n  var _useState = useState(\"\"),\n      newTask = _useState[0],\n      setNewTask = _useState[1];\n\n  var _useState2 = useState([]),\n      tasks = _useState2[0],\n      setTasks = _useState2[1];\n\n  var inputRef = useRef(null);\n\n  var handleSubmit = function handleSubmit(e) {\n    var _inputRef$current;\n\n    e.preventDefault();\n    addTask(newTask);\n    setNewTask(\"\");\n    (_inputRef$current = inputRef.current) === null || _inputRef$current === void 0 ? void 0 : _inputRef$current.focus();\n  }; //eL VOID va porque el addTask no tiene return!!!!!\n\n\n  var addTask = function addTask(name) {\n    var newTasks = [].concat(_toConsumableArray(tasks), [{\n      name: name,\n      done: false\n    }]);\n    setTasks(newTasks);\n    console.log(tasks);\n  };\n\n  var cambiarTask = function cambiarTask(i) {\n    var copyTask = _toConsumableArray(tasks);\n\n    copyTask[i].done = !copyTask[i].done;\n    setTasks(copyTask);\n  };\n\n  var removeTask = function removeTask(i) {\n    var copyTask = _toConsumableArray(tasks);\n\n    copyTask.splice(i, 1);\n    setTasks(copyTask);\n  };\n\n  return __jsx(Container, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 5\n    }\n  }, __jsx(\"div\", {\n    className: \"row\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }\n  }, __jsx(\"div\", {\n    className: \"col-md-6 offset-md-3\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }\n  }, __jsx(\"div\", {\n    className: \"card\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 11\n    }\n  }, __jsx(\"div\", {\n    className: \"card-body\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }\n  }, __jsx(\"form\", {\n    onSubmit: handleSubmit,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 15\n    }\n  }, __jsx(\"input\", {\n    type: \"text\",\n    onChange: function onChange(e) {\n      return setNewTask(e.target.value);\n    },\n    value: newTask,\n    className: \"form-control\",\n    autoFocus: true,\n    ref: inputRef,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 17\n    }\n  }), __jsx(\"button\", {\n    className: \"btn btn-success btn-block mt-2\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 17\n    }\n  }, \"Guardar\")))), tasks.map(function (t, i) {\n    return __jsx(\"div\", {\n      className: \"card card-body mt-2\",\n      key: i,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 13\n      }\n    }, __jsx(\"h2\", {\n      style: {\n        textDecoration: t.done ? \"line-through\" : \"\"\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 15\n      }\n    }, t.name), __jsx(\"p\", {\n      style: {\n        \"float\": \"left\"\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 15\n      }\n    }, t.done + \"\"), __jsx(\"div\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 15\n      }\n    }, __jsx(\"button\", {\n      className: \"btn btn-secondary\",\n      onClick: function onClick() {\n        return cambiarTask(i);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 17\n      }\n    }, t.done ? \"✓\" : \"x\"), __jsx(\"br\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 17\n      }\n    }), __jsx(\"button\", {\n      className: \"btn btn-danger\",\n      onClick: function onClick() {\n        return removeTask(i);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 17\n      }\n    }, \"Eliminar\")));\n  }))));\n};\n\n_s(Index, \"7yVE8N4JHZoGiPigyjeNa+wsJiI=\");\n\n_c = Index;\nexport default Index;\n\nvar _c;\n\n$RefreshReg$(_c, \"Index\");","map":{"version":3,"sources":["/Users/mariesco/Documents/Practicas/typescript/simple crud/front/pages/index.tsx"],"names":["React","useState","useRef","Container","Index","newTask","setNewTask","tasks","setTasks","inputRef","handleSubmit","e","preventDefault","addTask","current","focus","name","newTasks","done","console","log","cambiarTask","i","copyTask","removeTask","splice","target","value","map","t","textDecoration"],"mappings":"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","sourcesContent":["//Lo mínimo para arrancar:\n//npm i next react react-dom\n//npm i -D @types/next @types/react @types/react-dom @zeit/next-typescript typescript\n//creamos nuestros script en package.json\n//creamos babel.config.js\n//creamos next.config.js\n//creamos tsconfig.json\nimport React, { useState, useRef } from \"react\";\nimport Container from \"../components/container\";\n\ntype FormElement = React.FormEvent<HTMLFormElement>;\n\ninterface iTask {\n  name: string;\n  done: boolean;\n}\n\nconst Index = (): JSX.Element => {\n  const [newTask, setNewTask] = useState<string>(\"\");\n  const [tasks, setTasks] = useState<iTask[]>([]);\n\n  const inputRef = useRef<HTMLInputElement>(null);\n\n  const handleSubmit = (e: FormElement) => {\n    e.preventDefault();\n    addTask(newTask);\n    setNewTask(\"\");\n    inputRef.current?.focus();\n  };\n  //eL VOID va porque el addTask no tiene return!!!!!\n  const addTask = (name: string): void => {\n    const newTasks: iTask[] = [\n      ...tasks,\n      {\n        name,\n        done: false,\n      },\n    ];\n    setTasks(newTasks);\n    console.log(tasks);\n  };\n\n  const cambiarTask = (i: number): void => {\n    const copyTask: iTask[] = [...tasks];\n    copyTask[i].done = !copyTask[i].done;\n    setTasks(copyTask);\n  };\n\n  const removeTask = (i: number): void => {\n    const copyTask: iTask[] = [...tasks];\n    copyTask.splice(i, 1);\n    setTasks(copyTask);\n  };\n\n  return (\n    <Container>\n      <div className=\"row\">\n        <div className=\"col-md-6 offset-md-3\">\n          <div className=\"card\">\n            <div className=\"card-body\">\n              <form onSubmit={handleSubmit}>\n                <input\n                  type=\"text\"\n                  onChange={(e) => setNewTask(e.target.value)}\n                  value={newTask}\n                  className=\"form-control\"\n                  autoFocus\n                  ref={inputRef}\n                />\n                <button className=\"btn btn-success btn-block mt-2\">\n                  Guardar\n                </button>\n              </form>\n            </div>\n          </div>\n          {tasks.map((t: iTask, i: number) => (\n            <div className=\"card card-body mt-2\" key={i}>\n              <h2 style={{ textDecoration: t.done ? \"line-through\" : \"\" }}>\n                {t.name}\n              </h2>\n              <p style={{ float: \"left\" }}>{t.done + \"\"}</p>\n              <div>\n                <button\n                  className=\"btn btn-secondary\"\n                  onClick={() => cambiarTask(i)}\n                >\n                  {t.done ? \"✓\" : \"x\"}\n                </button>\n                <br />\n                <button\n                  className=\"btn btn-danger\"\n                  onClick={() => removeTask(i)}\n                >\n                  Eliminar\n                </button>\n              </div>\n            </div>\n          ))}\n        </div>\n      </div>\n    </Container>\n  );\n};\n\nexport default Index;\n"]},"metadata":{},"sourceType":"module"}